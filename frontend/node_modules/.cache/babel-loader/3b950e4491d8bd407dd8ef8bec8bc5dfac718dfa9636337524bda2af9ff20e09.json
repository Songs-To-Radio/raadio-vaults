{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/src/components/web2Metadata.jsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport Input from \"./input\";\nimport Text from \"./texts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Web2Metadata(_ref) {\n  _s();\n  let {\n    form,\n    setForm\n  } = _ref;\n  const errors = useRef({});\n  let keys = Object.keys(form);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-theme-light-grey p-5 mb-10\",\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        cls: \"text-[14px] text-theme-red\",\n        children: \"Ensure you fill out the form and cross-examine the data inputed by you as you are at liberty to omit any and even all fields\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: keys.map((name, index) => {\n        let title = name.replaceAll(\"_\", \" \");\n        if (name == \"public_domain\") title += \" (Yes or No)\";\n        if (name == \"has_vocals\") title += \" (Yes or No)\";\n        if (name == \"explicit\") title += \" (Yes or No)\";\n        if (name == \"cue_type\") title += \" (Instrumental or Vocals)\";\n        if (name == \"tempo\") title += \" (Slow, Medium, Fast, etc.)\";\n        if (name == \"bpm\") title += \" (Beats per Minutes)\";\n        if (name == \"instrument_type\") title += \" (Band, Guitar)\";\n        if (name == \"writer_PRO_affiliation\") title += \" (BMI)\";\n        if (name == \"IPI_number\") title += \" (Yes or No)\";\n        if (name == \"public_domain\") title = \"Writer CAE/\" + title + \" (Comes with PRO website)\";\n        return /*#__PURE__*/_jsxDEV(Input, {\n          name: name,\n          title: title,\n          setForm: setForm,\n          form: form\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n_s(Web2Metadata, \"DCKlt6RluG6BXJ7O5NEPJDnZb+I=\");\n_c = Web2Metadata;\nvar _c;\n$RefreshReg$(_c, \"Web2Metadata\");","map":{"version":3,"names":["useRef","useState","Input","Text","Web2Metadata","form","setForm","errors","keys","Object","map","name","index","title","replaceAll"],"sources":["/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/src/components/web2Metadata.jsx"],"sourcesContent":["import { useRef, useState } from \"react\";\nimport Input from \"./input\";\nimport Text from \"./texts\";\n\nexport default function Web2Metadata({form, setForm}){\n    const errors = useRef({});\n\n    let keys = Object.keys(form);\n\n\n    return (\n        <div>\n            <div className=\"bg-theme-light-grey p-5 mb-10\">\n                <Text cls={\"text-[14px] text-theme-red\"}>\n                    Ensure you fill out the form and cross-examine the data inputed by you as you are at liberty to omit any and even all fields\n                </Text>\n            </div>\n\n            <div>\n                {keys.map((name, index)=>{\n                    let title = name.replaceAll(\"_\", \" \");\n                    \n                    if(name == \"public_domain\") title += \" (Yes or No)\"\n                    if(name == \"has_vocals\") title += \" (Yes or No)\"\n                    if(name == \"explicit\") title += \" (Yes or No)\"\n                    if(name == \"cue_type\") title += \" (Instrumental or Vocals)\"\n                    if(name == \"tempo\") title += \" (Slow, Medium, Fast, etc.)\"\n                    if(name == \"bpm\") title += \" (Beats per Minutes)\"\n                    if(name == \"instrument_type\") title += \" (Band, Guitar)\"\n                    if(name == \"writer_PRO_affiliation\") title += \" (BMI)\"\n                    if(name == \"IPI_number\") title += \" (Yes or No)\"\n                    if(name == \"public_domain\") title = (\"Writer CAE/\"+ title + \" (Comes with PRO website)\");\n\n                    return <Input \n                        name={name}\n                        title={title}\n                        setForm={setForm}\n                        form={form}\n                        key={index}\n                    />\n                })}\n            </div>\n        </div>\n    )\n}"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,IAAI,MAAM,SAAS;AAAC;AAE3B,eAAe,SAASC,YAAY,OAAiB;EAAA;EAAA,IAAhB;IAACC,IAAI;IAAEC;EAAO,CAAC;EAChD,MAAMC,MAAM,GAAGP,MAAM,CAAC,CAAC,CAAC,CAAC;EAEzB,IAAIQ,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACH,IAAI,CAAC;EAG5B,oBACI;IAAA,wBACI;MAAK,SAAS,EAAC,+BAA+B;MAAA,uBAC1C,QAAC,IAAI;QAAC,GAAG,EAAE,4BAA6B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAEjC;MAAA;MAAA;MAAA;IAAA,QACL,eAEN;MAAA,UACKG,IAAI,CAACE,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAG;QACrB,IAAIC,KAAK,GAAGF,IAAI,CAACG,UAAU,CAAC,GAAG,EAAE,GAAG,CAAC;QAErC,IAAGH,IAAI,IAAI,eAAe,EAAEE,KAAK,IAAI,cAAc;QACnD,IAAGF,IAAI,IAAI,YAAY,EAAEE,KAAK,IAAI,cAAc;QAChD,IAAGF,IAAI,IAAI,UAAU,EAAEE,KAAK,IAAI,cAAc;QAC9C,IAAGF,IAAI,IAAI,UAAU,EAAEE,KAAK,IAAI,2BAA2B;QAC3D,IAAGF,IAAI,IAAI,OAAO,EAAEE,KAAK,IAAI,6BAA6B;QAC1D,IAAGF,IAAI,IAAI,KAAK,EAAEE,KAAK,IAAI,sBAAsB;QACjD,IAAGF,IAAI,IAAI,iBAAiB,EAAEE,KAAK,IAAI,iBAAiB;QACxD,IAAGF,IAAI,IAAI,wBAAwB,EAAEE,KAAK,IAAI,QAAQ;QACtD,IAAGF,IAAI,IAAI,YAAY,EAAEE,KAAK,IAAI,cAAc;QAChD,IAAGF,IAAI,IAAI,eAAe,EAAEE,KAAK,GAAI,aAAa,GAAEA,KAAK,GAAG,2BAA4B;QAExF,oBAAO,QAAC,KAAK;UACT,IAAI,EAAEF,IAAK;UACX,KAAK,EAAEE,KAAM;UACb,OAAO,EAAEP,OAAQ;UACjB,IAAI,EAAED;QAAK,GACNO,KAAK;UAAA;UAAA;UAAA;QAAA,QACZ;MACN,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACA;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,GAxCuBR,YAAY;AAAA,KAAZA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}