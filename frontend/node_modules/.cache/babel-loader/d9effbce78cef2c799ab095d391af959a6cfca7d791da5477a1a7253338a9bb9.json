{"ast":null,"code":"import _regeneratorRuntime from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncGeneratorDelegate from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js\";\nimport _asyncIterator from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport _awaitAsyncGenerator from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport dirBuilder from './dir.js';\nimport fileBuilder from './file/index.js';\nimport errCode from 'err-code';\nimport rabin from '../chunker/rabin.js';\nimport fixedSize from '../chunker/fixed-size.js';\nimport validateChunks from './validate-chunks.js';\nfunction isIterable(thing) {\n  return Symbol.iterator in thing;\n}\nfunction isAsyncIterable(thing) {\n  return Symbol.asyncIterator in thing;\n}\nfunction contentAsAsyncIterable(content) {\n  try {\n    if (content instanceof Uint8Array) {\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return content;\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    } else if (isIterable(content)) {\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.delegateYield(_asyncGeneratorDelegate(_asyncIterator(content), _awaitAsyncGenerator), \"t0\", 1);\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    } else if (isAsyncIterable(content)) {\n      return content;\n    }\n  } catch (_unused) {\n    throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n  }\n  throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n}\nfunction dagBuilder(_x, _x2, _x3) {\n  return _dagBuilder.apply(this, arguments);\n}\nfunction _dagBuilder() {\n  _dagBuilder = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(source, blockstore, options) {\n    var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, entry;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _iteratorAbruptCompletion = false;\n            _didIteratorError = false;\n            _context5.prev = 2;\n            _iterator = _asyncIterator(source);\n          case 4:\n            _context5.next = 6;\n            return _awaitAsyncGenerator(_iterator.next());\n          case 6:\n            if (!(_iteratorAbruptCompletion = !(_step = _context5.sent).done)) {\n              _context5.next = 21;\n              break;\n            }\n            entry = _step.value;\n            if (entry.path) {\n              if (entry.path.substring(0, 2) === './') {\n                options.wrapWithDirectory = true;\n              }\n              entry.path = entry.path.split('/').filter(function (path) {\n                return path && path !== '.';\n              }).join('/');\n            }\n            if (!entry.content) {\n              _context5.next = 13;\n              break;\n            }\n            return _context5.delegateYield( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n              var chunker, chunkValidator, file;\n              return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      chunker = void 0;\n                      if (typeof options.chunker === 'function') {\n                        chunker = options.chunker;\n                      } else if (options.chunker === 'rabin') {\n                        chunker = rabin;\n                      } else {\n                        chunker = fixedSize;\n                      }\n                      chunkValidator = void 0;\n                      if (typeof options.chunkValidator === 'function') {\n                        chunkValidator = options.chunkValidator;\n                      } else {\n                        chunkValidator = validateChunks;\n                      }\n                      file = {\n                        path: entry.path,\n                        mtime: entry.mtime,\n                        mode: entry.mode,\n                        content: chunker(chunkValidator(contentAsAsyncIterable(entry.content), options), options)\n                      };\n                      _context3.next = 7;\n                      return function () {\n                        return fileBuilder(file, blockstore, options);\n                      };\n                    case 7:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, _callee3);\n            })(), \"t0\", 11);\n          case 11:\n            _context5.next = 18;\n            break;\n          case 13:\n            if (!entry.path) {\n              _context5.next = 17;\n              break;\n            }\n            return _context5.delegateYield( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n              var dir;\n              return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      dir = {\n                        path: entry.path,\n                        mtime: entry.mtime,\n                        mode: entry.mode\n                      };\n                      _context4.next = 3;\n                      return function () {\n                        return dirBuilder(dir, blockstore, options);\n                      };\n                    case 3:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              }, _callee4);\n            })(), \"t1\", 15);\n          case 15:\n            _context5.next = 18;\n            break;\n          case 17:\n            throw new Error('Import candidate must have content or path or both');\n          case 18:\n            _iteratorAbruptCompletion = false;\n            _context5.next = 4;\n            break;\n          case 21:\n            _context5.next = 27;\n            break;\n          case 23:\n            _context5.prev = 23;\n            _context5.t2 = _context5[\"catch\"](2);\n            _didIteratorError = true;\n            _iteratorError = _context5.t2;\n          case 27:\n            _context5.prev = 27;\n            _context5.prev = 28;\n            if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n              _context5.next = 32;\n              break;\n            }\n            _context5.next = 32;\n            return _awaitAsyncGenerator(_iterator.return());\n          case 32:\n            _context5.prev = 32;\n            if (!_didIteratorError) {\n              _context5.next = 35;\n              break;\n            }\n            throw _iteratorError;\n          case 35:\n            return _context5.finish(32);\n          case 36:\n            return _context5.finish(27);\n          case 37:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[2, 23, 27, 37], [28,, 32, 36]]);\n  }));\n  return _dagBuilder.apply(this, arguments);\n}\nexport default dagBuilder;","map":{"version":3,"names":["dirBuilder","fileBuilder","errCode","rabin","fixedSize","validateChunks","isIterable","thing","Symbol","iterator","isAsyncIterable","asyncIterator","contentAsAsyncIterable","content","Uint8Array","Error","dagBuilder","source","blockstore","options","entry","path","substring","wrapWithDirectory","split","filter","join","chunker","chunkValidator","file","mtime","mode","dir"],"sources":["/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/ipfs-unixfs-importer/esm/src/dag-builder/index.js"],"sourcesContent":["import dirBuilder from './dir.js';\nimport fileBuilder from './file/index.js';\nimport errCode from 'err-code';\nimport rabin from '../chunker/rabin.js';\nimport fixedSize from '../chunker/fixed-size.js';\nimport validateChunks from './validate-chunks.js';\nfunction isIterable(thing) {\n  return Symbol.iterator in thing;\n}\nfunction isAsyncIterable(thing) {\n  return Symbol.asyncIterator in thing;\n}\nfunction contentAsAsyncIterable(content) {\n  try {\n    if (content instanceof Uint8Array) {\n      return async function* () {\n        yield content;\n      }();\n    } else if (isIterable(content)) {\n      return async function* () {\n        yield* content;\n      }();\n    } else if (isAsyncIterable(content)) {\n      return content;\n    }\n  } catch {\n    throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n  }\n  throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n}\nasync function* dagBuilder(source, blockstore, options) {\n  for await (const entry of source) {\n    if (entry.path) {\n      if (entry.path.substring(0, 2) === './') {\n        options.wrapWithDirectory = true;\n      }\n      entry.path = entry.path.split('/').filter(path => path && path !== '.').join('/');\n    }\n    if (entry.content) {\n      let chunker;\n      if (typeof options.chunker === 'function') {\n        chunker = options.chunker;\n      } else if (options.chunker === 'rabin') {\n        chunker = rabin;\n      } else {\n        chunker = fixedSize;\n      }\n      let chunkValidator;\n      if (typeof options.chunkValidator === 'function') {\n        chunkValidator = options.chunkValidator;\n      } else {\n        chunkValidator = validateChunks;\n      }\n      const file = {\n        path: entry.path,\n        mtime: entry.mtime,\n        mode: entry.mode,\n        content: chunker(chunkValidator(contentAsAsyncIterable(entry.content), options), options)\n      };\n      yield () => fileBuilder(file, blockstore, options);\n    } else if (entry.path) {\n      const dir = {\n        path: entry.path,\n        mtime: entry.mtime,\n        mode: entry.mode\n      };\n      yield () => dirBuilder(dir, blockstore, options);\n    } else {\n      throw new Error('Import candidate must have content or path or both');\n    }\n  }\n}\nexport default dagBuilder;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}