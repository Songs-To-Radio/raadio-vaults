{"ast":null,"code":"import _regeneratorRuntime from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _asyncIterator from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport _awaitAsyncGenerator from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport { encode, prepare } from '@ipld/dag-pb';\nimport { UnixFS } from 'ipfs-unixfs';\nimport Dir from './dir.js';\nimport persist from './utils/persist.js';\nvar DirFlat = /*#__PURE__*/function (_Dir) {\n  _inherits(DirFlat, _Dir);\n  var _super = _createSuper(DirFlat);\n  function DirFlat(props, options) {\n    var _this3;\n    _classCallCheck(this, DirFlat);\n    _this3 = _super.call(this, props, options);\n    _this3._children = {};\n    return _this3;\n  }\n  _createClass(DirFlat, [{\n    key: \"put\",\n    value: function () {\n      var _put = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(name, value) {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.cid = undefined;\n                this.size = undefined;\n                this._children[name] = value;\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function put(_x, _x2) {\n        return _put.apply(this, arguments);\n      }\n      return put;\n    }()\n  }, {\n    key: \"get\",\n    value: function get(name) {\n      return Promise.resolve(this._children[name]);\n    }\n  }, {\n    key: \"childCount\",\n    value: function childCount() {\n      return Object.keys(this._children).length;\n    }\n  }, {\n    key: \"directChildrenCount\",\n    value: function directChildrenCount() {\n      return this.childCount();\n    }\n  }, {\n    key: \"onlyChild\",\n    value: function onlyChild() {\n      return this._children[Object.keys(this._children)[0]];\n    }\n  }, {\n    key: \"eachChildSeries\",\n    value: function eachChildSeries() {\n      var _this = this;\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var keys, i, key;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                keys = Object.keys(_this._children);\n                i = 0;\n              case 2:\n                if (!(i < keys.length)) {\n                  _context2.next = 9;\n                  break;\n                }\n                key = keys[i];\n                _context2.next = 6;\n                return {\n                  key: key,\n                  child: _this._children[key]\n                };\n              case 6:\n                i++;\n                _context2.next = 2;\n                break;\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    }\n  }, {\n    key: \"flush\",\n    value: function flush(block) {\n      var _this2 = this;\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var children, links, i, child, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, entry, unixfs, node, buffer, cid, size;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                children = Object.keys(_this2._children);\n                links = [];\n                i = 0;\n              case 3:\n                if (!(i < children.length)) {\n                  _context3.next = 40;\n                  break;\n                }\n                child = _this2._children[children[i]];\n                if (!(child instanceof Dir)) {\n                  _context3.next = 36;\n                  break;\n                }\n                _iteratorAbruptCompletion = false;\n                _didIteratorError = false;\n                _context3.prev = 8;\n                _iterator = _asyncIterator(child.flush(block));\n              case 10:\n                _context3.next = 12;\n                return _awaitAsyncGenerator(_iterator.next());\n              case 12:\n                if (!(_iteratorAbruptCompletion = !(_step = _context3.sent).done)) {\n                  _context3.next = 20;\n                  break;\n                }\n                entry = _step.value;\n                child = entry;\n                _context3.next = 17;\n                return child;\n              case 17:\n                _iteratorAbruptCompletion = false;\n                _context3.next = 10;\n                break;\n              case 20:\n                _context3.next = 26;\n                break;\n              case 22:\n                _context3.prev = 22;\n                _context3.t0 = _context3[\"catch\"](8);\n                _didIteratorError = true;\n                _iteratorError = _context3.t0;\n              case 26:\n                _context3.prev = 26;\n                _context3.prev = 27;\n                if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                  _context3.next = 31;\n                  break;\n                }\n                _context3.next = 31;\n                return _awaitAsyncGenerator(_iterator.return());\n              case 31:\n                _context3.prev = 31;\n                if (!_didIteratorError) {\n                  _context3.next = 34;\n                  break;\n                }\n                throw _iteratorError;\n              case 34:\n                return _context3.finish(31);\n              case 35:\n                return _context3.finish(26);\n              case 36:\n                if (child.size != null && child.cid) {\n                  links.push({\n                    Name: children[i],\n                    Tsize: child.size,\n                    Hash: child.cid\n                  });\n                }\n              case 37:\n                i++;\n                _context3.next = 3;\n                break;\n              case 40:\n                unixfs = new UnixFS({\n                  type: 'directory',\n                  mtime: _this2.mtime,\n                  mode: _this2.mode\n                });\n                node = {\n                  Data: unixfs.marshal(),\n                  Links: links\n                };\n                buffer = encode(prepare(node));\n                _context3.next = 45;\n                return _awaitAsyncGenerator(persist(buffer, block, _this2.options));\n              case 45:\n                cid = _context3.sent;\n                size = buffer.length + node.Links.reduce(function (acc, curr) {\n                  return acc + (curr.Tsize == null ? 0 : curr.Tsize);\n                }, 0);\n                _this2.cid = cid;\n                _this2.size = size;\n                _context3.next = 51;\n                return {\n                  cid: cid,\n                  unixfs: unixfs,\n                  path: _this2.path,\n                  size: size\n                };\n              case 51:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[8, 22, 26, 36], [27,, 31, 35]]);\n      }))();\n    }\n  }]);\n  return DirFlat;\n}(Dir);\nexport default DirFlat;","map":{"version":3,"names":["encode","prepare","UnixFS","Dir","persist","DirFlat","props","options","_children","name","value","cid","undefined","size","Promise","resolve","Object","keys","length","childCount","i","key","child","block","children","links","flush","entry","push","Name","Tsize","Hash","unixfs","type","mtime","mode","node","Data","marshal","Links","buffer","reduce","acc","curr","path"],"sources":["/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/ipfs-unixfs-importer/esm/src/dir-flat.js"],"sourcesContent":["import {\n  encode,\n  prepare\n} from '@ipld/dag-pb';\nimport { UnixFS } from 'ipfs-unixfs';\nimport Dir from './dir.js';\nimport persist from './utils/persist.js';\nclass DirFlat extends Dir {\n  constructor(props, options) {\n    super(props, options);\n    this._children = {};\n  }\n  async put(name, value) {\n    this.cid = undefined;\n    this.size = undefined;\n    this._children[name] = value;\n  }\n  get(name) {\n    return Promise.resolve(this._children[name]);\n  }\n  childCount() {\n    return Object.keys(this._children).length;\n  }\n  directChildrenCount() {\n    return this.childCount();\n  }\n  onlyChild() {\n    return this._children[Object.keys(this._children)[0]];\n  }\n  async *eachChildSeries() {\n    const keys = Object.keys(this._children);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      yield {\n        key: key,\n        child: this._children[key]\n      };\n    }\n  }\n  async *flush(block) {\n    const children = Object.keys(this._children);\n    const links = [];\n    for (let i = 0; i < children.length; i++) {\n      let child = this._children[children[i]];\n      if (child instanceof Dir) {\n        for await (const entry of child.flush(block)) {\n          child = entry;\n          yield child;\n        }\n      }\n      if (child.size != null && child.cid) {\n        links.push({\n          Name: children[i],\n          Tsize: child.size,\n          Hash: child.cid\n        });\n      }\n    }\n    const unixfs = new UnixFS({\n      type: 'directory',\n      mtime: this.mtime,\n      mode: this.mode\n    });\n    const node = {\n      Data: unixfs.marshal(),\n      Links: links\n    };\n    const buffer = encode(prepare(node));\n    const cid = await persist(buffer, block, this.options);\n    const size = buffer.length + node.Links.reduce((acc, curr) => acc + (curr.Tsize == null ? 0 : curr.Tsize), 0);\n    this.cid = cid;\n    this.size = size;\n    yield {\n      cid,\n      unixfs,\n      path: this.path,\n      size\n    };\n  }\n}\nexport default DirFlat;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}