{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/src/contexts/user.contexts.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useCallback, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nexport default function UserContextProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [address, setAddress] = useState(\"\");\n  const handleConnect = useCallback(async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const accounts = await provider.send(\"eth_requestAccounts\", []);\n    set(accounts[0]);\n  }, []);\n  const handleDisonnect = useCallback(async () => {\n    setAccount();\n  }, []);\n  useEffect(() => {\n    window.ethereum.on(\"accountsChanged\", async accounts => {\n      setAccount(accounts[0]);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      address\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(UserContextProvider, \"IvkVj/GkZhNE9LPK0jccO1BdaAs=\");\n_c = UserContextProvider;\nvar _c;\n$RefreshReg$(_c, \"UserContextProvider\");","map":{"version":3,"names":["createContext","useState","useCallback","useEffect","UserContext","UserContextProvider","children","address","setAddress","handleConnect","provider","ethers","providers","Web3Provider","window","ethereum","accounts","send","set","handleDisonnect","setAccount","on"],"sources":["/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/src/contexts/user.contexts.jsx"],"sourcesContent":["import { createContext, useState, useCallback, useEffect } from \"react\";\n\nexport const UserContext = createContext();\n\nexport default function UserContextProvider({children}){\n    const [address, setAddress] = useState(\"\");\n\n    const handleConnect = useCallback(async () => {\n        const provider = new ethers.providers.Web3Provider(window.ethereum)\n        const accounts = await provider.send(\"eth_requestAccounts\", [])\n        set(accounts[0])\n      }, [])\n    \n      const handleDisonnect = useCallback(async () => {\n        setAccount()\n      }, [])\n    \n      useEffect(() => {\n        window.ethereum.on(\"accountsChanged\", async (accounts) => {\n          setAccount(accounts[0])\n        })\n      }, [])\n    \n\n    return (\n        <UserContext.Provider value={{address}}>\n            {children}\n        </UserContext.Provider>\n    )\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAExE,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,EAAE;AAE1C,eAAe,SAASK,mBAAmB,OAAY;EAAA;EAAA,IAAX;IAACC;EAAQ,CAAC;EAClD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMQ,aAAa,GAAGP,WAAW,CAAC,YAAY;IAC1C,MAAMQ,QAAQ,GAAG,IAAIC,MAAM,CAACC,SAAS,CAACC,YAAY,CAACC,MAAM,CAACC,QAAQ,CAAC;IACnE,MAAMC,QAAQ,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;IAC/DC,GAAG,CAACF,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,eAAe,GAAGjB,WAAW,CAAC,YAAY;IAC9CkB,UAAU,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;EAENjB,SAAS,CAAC,MAAM;IACdW,MAAM,CAACC,QAAQ,CAACM,EAAE,CAAC,iBAAiB,EAAE,MAAOL,QAAQ,IAAK;MACxDI,UAAU,CAACJ,QAAQ,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAGR,oBACI,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAE;MAACT;IAAO,CAAE;IAAA,UAClCD;EAAQ;IAAA;IAAA;IAAA;EAAA,QACU;AAE/B;AAAC,GAzBuBD,mBAAmB;AAAA,KAAnBA,mBAAmB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}