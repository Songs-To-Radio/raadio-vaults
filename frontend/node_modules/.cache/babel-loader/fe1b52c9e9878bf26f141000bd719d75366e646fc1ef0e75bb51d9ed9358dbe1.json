{"ast":null,"code":"import { ethers } from \"ethers\";\nexport async function connectWallet() {\n  try {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = provider.getSigner();\n    console.log(await signer.getAddress());\n\n    // return await signer.getAddress();\n  } catch (error) {\n    throw error;\n  }\n}","map":{"version":3,"names":["ethers","connectWallet","provider","providers","Web3Provider","window","ethereum","send","signer","getSigner","console","log","getAddress","error"],"sources":["/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/src/ethers.js"],"sourcesContent":["import { ethers } from \"ethers\";\n\nexport async function connectWallet() {\n  try {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = provider.getSigner();\n    console.log(await signer.getAddress());\n    \n    // return await signer.getAddress();\n  } catch (error) {\n    throw error;\n  }\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,QAAQ;AAE/B,OAAO,eAAeC,aAAa,GAAG;EACpC,IAAI;IACF,MAAMC,QAAQ,GAAG,IAAIF,MAAM,CAACG,SAAS,CAACC,YAAY,CAACC,MAAM,CAACC,QAAQ,CAAC;IACnE,MAAMJ,QAAQ,CAACK,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;IAC9C,MAAMC,MAAM,GAAGN,QAAQ,CAACO,SAAS,EAAE;IACnCC,OAAO,CAACC,GAAG,CAAC,MAAMH,MAAM,CAACI,UAAU,EAAE,CAAC;;IAEtC;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}