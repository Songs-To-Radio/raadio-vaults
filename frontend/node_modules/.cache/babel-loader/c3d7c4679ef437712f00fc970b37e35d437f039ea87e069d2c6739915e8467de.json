{"ast":null,"code":"import _regeneratorRuntime from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _awaitAsyncGenerator from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _asyncIterator from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport errCode from 'err-code';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nfunction validateChunks(_x) {\n  return _validateChunks.apply(this, arguments);\n}\nfunction _validateChunks() {\n  _validateChunks = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(source) {\n    var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, content;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _iteratorAbruptCompletion = false;\n            _didIteratorError = false;\n            _context.prev = 2;\n            _iterator = _asyncIterator(source);\n          case 4:\n            _context.next = 6;\n            return _awaitAsyncGenerator(_iterator.next());\n          case 6:\n            if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n              _context.next = 29;\n              break;\n            }\n            content = _step.value;\n            if (!(content.length === undefined)) {\n              _context.next = 10;\n              break;\n            }\n            throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n          case 10:\n            if (!(typeof content === 'string' || content instanceof String)) {\n              _context.next = 15;\n              break;\n            }\n            _context.next = 13;\n            return uint8ArrayFromString(content.toString());\n          case 13:\n            _context.next = 26;\n            break;\n          case 15:\n            if (!Array.isArray(content)) {\n              _context.next = 20;\n              break;\n            }\n            _context.next = 18;\n            return Uint8Array.from(content);\n          case 18:\n            _context.next = 26;\n            break;\n          case 20:\n            if (!(content instanceof Uint8Array)) {\n              _context.next = 25;\n              break;\n            }\n            _context.next = 23;\n            return content;\n          case 23:\n            _context.next = 26;\n            break;\n          case 25:\n            throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n          case 26:\n            _iteratorAbruptCompletion = false;\n            _context.next = 4;\n            break;\n          case 29:\n            _context.next = 35;\n            break;\n          case 31:\n            _context.prev = 31;\n            _context.t0 = _context[\"catch\"](2);\n            _didIteratorError = true;\n            _iteratorError = _context.t0;\n          case 35:\n            _context.prev = 35;\n            _context.prev = 36;\n            if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n              _context.next = 40;\n              break;\n            }\n            _context.next = 40;\n            return _awaitAsyncGenerator(_iterator.return());\n          case 40:\n            _context.prev = 40;\n            if (!_didIteratorError) {\n              _context.next = 43;\n              break;\n            }\n            throw _iteratorError;\n          case 43:\n            return _context.finish(40);\n          case 44:\n            return _context.finish(35);\n          case 45:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 31, 35, 45], [36,, 40, 44]]);\n  }));\n  return _validateChunks.apply(this, arguments);\n}\nexport default validateChunks;","map":{"version":3,"names":["errCode","fromString","uint8ArrayFromString","validateChunks","source","content","length","undefined","Error","String","toString","Array","isArray","Uint8Array","from"],"sources":["/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/ipfs-unixfs-importer/esm/src/dag-builder/validate-chunks.js"],"sourcesContent":["import errCode from 'err-code';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nasync function* validateChunks(source) {\n  for await (const content of source) {\n    if (content.length === undefined) {\n      throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n    }\n    if (typeof content === 'string' || content instanceof String) {\n      yield uint8ArrayFromString(content.toString());\n    } else if (Array.isArray(content)) {\n      yield Uint8Array.from(content);\n    } else if (content instanceof Uint8Array) {\n      yield content;\n    } else {\n      throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n    }\n  }\n}\nexport default validateChunks;"],"mappings":";;;;AAAA,OAAOA,OAAO,MAAM,UAAU;AAC9B,SAASC,UAAU,IAAIC,oBAAoB,QAAQ,yBAAyB;AAAC,SAC7DC,cAAc;EAAA;AAAA;AAAA;EAAA,+EAA9B,iBAA+BC,MAAM;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA;YAAA,2BACPA,MAAM;UAAA;YAAA;YAAA;UAAA;YAAA;cAAA;cAAA;YAAA;YAAjBC,OAAO;YAAA,MAClBA,OAAO,CAACC,MAAM,KAAKC,SAAS;cAAA;cAAA;YAAA;YAAA,MACxBP,OAAO,CAAC,IAAIQ,KAAK,CAAC,qBAAqB,CAAC,EAAE,qBAAqB,CAAC;UAAA;YAAA,MAEpE,OAAOH,OAAO,KAAK,QAAQ,IAAIA,OAAO,YAAYI,MAAM;cAAA;cAAA;YAAA;YAAA;YAC1D,OAAMP,oBAAoB,CAACG,OAAO,CAACK,QAAQ,EAAE,CAAC;UAAA;YAAA;YAAA;UAAA;YAAA,KACrCC,KAAK,CAACC,OAAO,CAACP,OAAO,CAAC;cAAA;cAAA;YAAA;YAAA;YAC/B,OAAMQ,UAAU,CAACC,IAAI,CAACT,OAAO,CAAC;UAAA;YAAA;YAAA;UAAA;YAAA,MACrBA,OAAO,YAAYQ,UAAU;cAAA;cAAA;YAAA;YAAA;YACtC,OAAMR,OAAO;UAAA;YAAA;YAAA;UAAA;YAAA,MAEPL,OAAO,CAAC,IAAIQ,KAAK,CAAC,qBAAqB,CAAC,EAAE,qBAAqB,CAAC;UAAA;YAAA;YAAA;YAAA;UAAA;YAAA;YAAA;UAAA;YAAA;YAAA;YAAA;YAAA;UAAA;YAAA;YAAA;YAAA;cAAA;cAAA;YAAA;YAAA;YAAA;UAAA;YAAA;YAAA;cAAA;cAAA;YAAA;YAAA;UAAA;YAAA;UAAA;YAAA;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAG3E;EAAA;AAAA;AACD,eAAeL,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}