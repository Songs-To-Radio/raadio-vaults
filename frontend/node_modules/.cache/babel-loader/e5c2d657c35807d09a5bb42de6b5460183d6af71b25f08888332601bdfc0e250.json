{"ast":null,"code":"import _asyncToGenerator from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _awaitAsyncGenerator from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport errCode from 'err-code';\nimport browserStreamToIt from 'browser-readablestream-to-it';\nimport itPeekable from 'it-peekable';\nimport { isBytes, isBlob, isReadableStream, isFileObject } from './utils.js';\nimport { parseMtime, parseMode } from 'ipfs-unixfs';\nexport function normaliseCandidateSingle(_x, _x2) {\n  return _normaliseCandidateSingle.apply(this, arguments);\n}\nfunction _normaliseCandidateSingle() {\n  _normaliseCandidateSingle = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(input, normaliseContent) {\n    var peekable, _yield$_awaitAsyncGen, value, done;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(input === null || input === undefined)) {\n              _context.next = 2;\n              break;\n            }\n            throw errCode(new Error(\"Unexpected input: \".concat(input)), 'ERR_UNEXPECTED_INPUT');\n          case 2:\n            if (!(typeof input === 'string' || input instanceof String)) {\n              _context.next = 6;\n              break;\n            }\n            _context.next = 5;\n            return toFileObject(input.toString(), normaliseContent);\n          case 5:\n            return _context.abrupt(\"return\");\n          case 6:\n            if (!(isBytes(input) || isBlob(input))) {\n              _context.next = 10;\n              break;\n            }\n            _context.next = 9;\n            return toFileObject(input, normaliseContent);\n          case 9:\n            return _context.abrupt(\"return\");\n          case 10:\n            if (isReadableStream(input)) {\n              input = browserStreamToIt(input);\n            }\n            if (!(Symbol.iterator in input || Symbol.asyncIterator in input)) {\n              _context.next = 28;\n              break;\n            }\n            peekable = itPeekable(input);\n            _context.next = 15;\n            return _awaitAsyncGenerator(peekable.peek());\n          case 15:\n            _yield$_awaitAsyncGen = _context.sent;\n            value = _yield$_awaitAsyncGen.value;\n            done = _yield$_awaitAsyncGen.done;\n            if (!done) {\n              _context.next = 22;\n              break;\n            }\n            _context.next = 21;\n            return {\n              content: []\n            };\n          case 21:\n            return _context.abrupt(\"return\");\n          case 22:\n            peekable.push(value);\n            if (!(Number.isInteger(value) || isBytes(value) || typeof value === 'string' || value instanceof String)) {\n              _context.next = 27;\n              break;\n            }\n            _context.next = 26;\n            return toFileObject(peekable, normaliseContent);\n          case 26:\n            return _context.abrupt(\"return\");\n          case 27:\n            throw errCode(new Error('Unexpected input: multiple items passed - if you are using ipfs.add, please use ipfs.addAll instead'), 'ERR_UNEXPECTED_INPUT');\n          case 28:\n            if (!isFileObject(input)) {\n              _context.next = 32;\n              break;\n            }\n            _context.next = 31;\n            return toFileObject(input, normaliseContent);\n          case 31:\n            return _context.abrupt(\"return\");\n          case 32:\n            throw errCode(new Error('Unexpected input: cannot convert \"' + typeof input + '\" into ImportCandidate'), 'ERR_UNEXPECTED_INPUT');\n          case 33:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _normaliseCandidateSingle.apply(this, arguments);\n}\nfunction toFileObject(_x3, _x4) {\n  return _toFileObject.apply(this, arguments);\n}\nfunction _toFileObject() {\n  _toFileObject = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(input, normaliseContent) {\n    var path, mode, mtime, content, file;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            path = input.path, mode = input.mode, mtime = input.mtime, content = input.content;\n            file = {\n              path: path || '',\n              mode: parseMode(mode),\n              mtime: parseMtime(mtime)\n            };\n            if (!content) {\n              _context2.next = 8;\n              break;\n            }\n            _context2.next = 5;\n            return normaliseContent(content);\n          case 5:\n            file.content = _context2.sent;\n            _context2.next = 12;\n            break;\n          case 8:\n            if (path) {\n              _context2.next = 12;\n              break;\n            }\n            _context2.next = 11;\n            return normaliseContent(input);\n          case 11:\n            file.content = _context2.sent;\n          case 12:\n            return _context2.abrupt(\"return\", file);\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _toFileObject.apply(this, arguments);\n}","map":{"version":3,"names":["errCode","browserStreamToIt","itPeekable","isBytes","isBlob","isReadableStream","isFileObject","parseMtime","parseMode","normaliseCandidateSingle","input","normaliseContent","undefined","Error","String","toFileObject","toString","Symbol","iterator","asyncIterator","peekable","peek","value","done","content","push","Number","isInteger","path","mode","mtime","file"],"sources":["/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/ipfs-core-utils/esm/src/files/normalise-candidate-single.js"],"sourcesContent":["import errCode from 'err-code';\nimport browserStreamToIt from 'browser-readablestream-to-it';\nimport itPeekable from 'it-peekable';\nimport {\n  isBytes,\n  isBlob,\n  isReadableStream,\n  isFileObject\n} from './utils.js';\nimport {\n  parseMtime,\n  parseMode\n} from 'ipfs-unixfs';\nexport async function* normaliseCandidateSingle(input, normaliseContent) {\n  if (input === null || input === undefined) {\n    throw errCode(new Error(`Unexpected input: ${ input }`), 'ERR_UNEXPECTED_INPUT');\n  }\n  if (typeof input === 'string' || input instanceof String) {\n    yield toFileObject(input.toString(), normaliseContent);\n    return;\n  }\n  if (isBytes(input) || isBlob(input)) {\n    yield toFileObject(input, normaliseContent);\n    return;\n  }\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input);\n  }\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = itPeekable(input);\n    const {value, done} = await peekable.peek();\n    if (done) {\n      yield { content: [] };\n      return;\n    }\n    peekable.push(value);\n    if (Number.isInteger(value) || isBytes(value) || typeof value === 'string' || value instanceof String) {\n      yield toFileObject(peekable, normaliseContent);\n      return;\n    }\n    throw errCode(new Error('Unexpected input: multiple items passed - if you are using ipfs.add, please use ipfs.addAll instead'), 'ERR_UNEXPECTED_INPUT');\n  }\n  if (isFileObject(input)) {\n    yield toFileObject(input, normaliseContent);\n    return;\n  }\n  throw errCode(new Error('Unexpected input: cannot convert \"' + typeof input + '\" into ImportCandidate'), 'ERR_UNEXPECTED_INPUT');\n}\nasync function toFileObject(input, normaliseContent) {\n  const {path, mode, mtime, content} = input;\n  const file = {\n    path: path || '',\n    mode: parseMode(mode),\n    mtime: parseMtime(mtime)\n  };\n  if (content) {\n    file.content = await normaliseContent(content);\n  } else if (!path) {\n    file.content = await normaliseContent(input);\n  }\n  return file;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}