{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/src/components/whitelist.jsx\",\n  _s = $RefreshSig$();\nimport Text from \"./texts\";\nimport Button from \"./button\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { UserContext } from \"../contexts/user.contexts\";\nimport { saveWhiteList } from \"../api/api\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Whitelist() {\n  _s();\n  const {\n    user\n  } = useContext(UserContext);\n  const [list, setList] = useState(\"\");\n  function save() {\n    toast.promise(async () => {\n      try {\n        return await saveWhiteList();\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    }, {\n      pending: \"Saving WhiteList\",\n      success: {\n        render(_ref) {\n          let {\n            data\n          } = _ref;\n          return `Success!`;\n        }\n      },\n      error: {\n        render(_ref2) {\n          let {\n            data\n          } = _ref2;\n          return \"Oops! Something went wrong\";\n        }\n      }\n    });\n  }\n  useEffect(() => {\n    if (user) {\n      let list = user.whiteList.join(\", \");\n      setList(list);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-20\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        size: \"mid\",\n        cls: \"text-[18px] font-semibold pl-5 w-fit m-auto\",\n        children: \"Whitelisted Domains\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        cls: \"text-center my-3\",\n        children: \"The following Domains would be given access to Masked Stream your media from IPFS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"m-auto block text-[13px] my-10 border rounded-xl border-theme-red w-[300px] p-3\",\n        rows: 4,\n        value: list,\n        onChange: e => {\n          let val = e.target.value;\n          setList(val);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"save\",\n        cls: \"block m-auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Whitelist, \"Y2dTwisEE6Atlv1z6Y4JUA/OHjQ=\");\n_c = Whitelist;\nvar _c;\n$RefreshReg$(_c, \"Whitelist\");","map":{"version":3,"names":["Text","Button","useContext","useEffect","useState","UserContext","saveWhiteList","toast","Whitelist","user","list","setList","save","promise","error","console","log","pending","success","render","data","whiteList","join","e","val","target","value"],"sources":["/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/src/components/whitelist.jsx"],"sourcesContent":["import Text from \"./texts\";\nimport Button from \"./button\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { UserContext } from \"../contexts/user.contexts\";\nimport { saveWhiteList } from \"../api/api\";\nimport { toast } from \"react-toastify\";\n\nexport default function Whitelist() {\n    const {user, } = useContext(UserContext);\n    const [list, setList] = useState(\"\");\n\n    function save(){\n        toast.promise(\n            async () => {\n              try {\n                return await saveWhiteList()\n              } catch (error) {\n                console.log(error);\n                throw error;\n              }\n            },\n            {\n              pending: \"Saving WhiteList\",\n              success: {\n                render({ data }) {\n                  \n                  return `Success!`;\n                },\n              },\n              error: {\n                render({ data }) {\n                  return \"Oops! Something went wrong\";\n                },\n              },\n            }\n          );\n    }\n    \n\n    useEffect(()=>{\n        if(user){\n            let list = user.whiteList.join(\", \");\n            setList(list);\n        }\n    }, [])\n\n  return (\n    <div>\n      <div className=\"my-20\">\n        <Text size=\"mid\" cls={\"text-[18px] font-semibold pl-5 w-fit m-auto\"}>\n          Whitelisted Domains\n        </Text>\n        <Text cls={\"text-center my-3\"}>\n          The following Domains would be given access to Masked Stream your media from IPFS\n        </Text>\n\n        <textarea className=\"m-auto block text-[13px] my-10 border rounded-xl border-theme-red w-[300px] p-3\" rows={4} value={list} onChange={(e)=>{\n            let val = e.target.value;\n            setList(val);\n        }}>\n\n        </textarea>\n        <Button label={\"save\"} cls={\"block m-auto\"} />\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,SAAS;AAC1B,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACvD,SAASC,WAAW,QAAQ,2BAA2B;AACvD,SAASC,aAAa,QAAQ,YAAY;AAC1C,SAASC,KAAK,QAAQ,gBAAgB;AAAC;AAEvC,eAAe,SAASC,SAAS,GAAG;EAAA;EAChC,MAAM;IAACC;EAAM,CAAC,GAAGP,UAAU,CAACG,WAAW,CAAC;EACxC,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpC,SAASQ,IAAI,GAAE;IACXL,KAAK,CAACM,OAAO,CACT,YAAY;MACV,IAAI;QACF,OAAO,MAAMP,aAAa,EAAE;MAC9B,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QAClB,MAAMA,KAAK;MACb;IACF,CAAC,EACD;MACEG,OAAO,EAAE,kBAAkB;MAC3BC,OAAO,EAAE;QACPC,MAAM,OAAW;UAAA,IAAV;YAAEC;UAAK,CAAC;UAEb,OAAQ,UAAS;QACnB;MACF,CAAC;MACDN,KAAK,EAAE;QACLK,MAAM,QAAW;UAAA,IAAV;YAAEC;UAAK,CAAC;UACb,OAAO,4BAA4B;QACrC;MACF;IACF,CAAC,CACF;EACP;EAGAjB,SAAS,CAAC,MAAI;IACV,IAAGM,IAAI,EAAC;MACJ,IAAIC,IAAI,GAAGD,IAAI,CAACY,SAAS,CAACC,IAAI,CAAC,IAAI,CAAC;MACpCX,OAAO,CAACD,IAAI,CAAC;IACjB;EACJ,CAAC,EAAE,EAAE,CAAC;EAER,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,OAAO;MAAA,wBACpB,QAAC,IAAI;QAAC,IAAI,EAAC,KAAK;QAAC,GAAG,EAAE,6CAA8C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAE7D,eACP,QAAC,IAAI;QAAC,GAAG,EAAE,kBAAmB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAEvB,eAEP;QAAU,SAAS,EAAC,iFAAiF;QAAC,IAAI,EAAE,CAAE;QAAC,KAAK,EAAEA,IAAK;QAAC,QAAQ,EAAGa,CAAC,IAAG;UACvI,IAAIC,GAAG,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;UACxBf,OAAO,CAACa,GAAG,CAAC;QAChB;MAAE;QAAA;QAAA;QAAA;MAAA,QAES,eACX,QAAC,MAAM;QAAC,KAAK,EAAE,MAAO;QAAC,GAAG,EAAE;MAAe;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EAC1C;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GA3DuBhB,SAAS;AAAA,KAATA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}