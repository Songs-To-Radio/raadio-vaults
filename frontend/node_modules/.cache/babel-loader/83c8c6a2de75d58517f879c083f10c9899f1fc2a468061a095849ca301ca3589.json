{"ast":null,"code":"import _regeneratorRuntime from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { UnixFS } from 'ipfs-unixfs';\nimport persist from '../utils/persist.js';\nimport { encode, prepare } from '@ipld/dag-pb';\nvar dirBuilder = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(item, blockstore, options) {\n    var unixfs, buffer, cid, path;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            unixfs = new UnixFS({\n              type: 'directory',\n              mtime: item.mtime,\n              mode: item.mode\n            });\n            buffer = encode(prepare({\n              Data: unixfs.marshal()\n            }));\n            _context.next = 4;\n            return persist(buffer, blockstore, options);\n          case 4:\n            cid = _context.sent;\n            path = item.path;\n            return _context.abrupt(\"return\", {\n              cid: cid,\n              path: path,\n              unixfs: unixfs,\n              size: buffer.length\n            });\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return function dirBuilder(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport default dirBuilder;","map":{"version":3,"names":["UnixFS","persist","encode","prepare","dirBuilder","item","blockstore","options","unixfs","type","mtime","mode","buffer","Data","marshal","cid","path","size","length"],"sources":["/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/ipfs-unixfs-importer/esm/src/dag-builder/dir.js"],"sourcesContent":["import { UnixFS } from 'ipfs-unixfs';\nimport persist from '../utils/persist.js';\nimport {\n  encode,\n  prepare\n} from '@ipld/dag-pb';\nconst dirBuilder = async (item, blockstore, options) => {\n  const unixfs = new UnixFS({\n    type: 'directory',\n    mtime: item.mtime,\n    mode: item.mode\n  });\n  const buffer = encode(prepare({ Data: unixfs.marshal() }));\n  const cid = await persist(buffer, blockstore, options);\n  const path = item.path;\n  return {\n    cid,\n    path,\n    unixfs,\n    size: buffer.length\n  };\n};\nexport default dirBuilder;"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,aAAa;AACpC,OAAOC,OAAO,MAAM,qBAAqB;AACzC,SACEC,MAAM,EACNC,OAAO,QACF,cAAc;AACrB,IAAMC,UAAU;EAAA,sEAAG,iBAAOC,IAAI,EAAEC,UAAU,EAAEC,OAAO;IAAA;IAAA;MAAA;QAAA;UAAA;YAC3CC,MAAM,GAAG,IAAIR,MAAM,CAAC;cACxBS,IAAI,EAAE,WAAW;cACjBC,KAAK,EAAEL,IAAI,CAACK,KAAK;cACjBC,IAAI,EAAEN,IAAI,CAACM;YACb,CAAC,CAAC;YACIC,MAAM,GAAGV,MAAM,CAACC,OAAO,CAAC;cAAEU,IAAI,EAAEL,MAAM,CAACM,OAAO;YAAG,CAAC,CAAC,CAAC;YAAA;YAAA,OACxCb,OAAO,CAACW,MAAM,EAAEN,UAAU,EAAEC,OAAO,CAAC;UAAA;YAAhDQ,GAAG;YACHC,IAAI,GAAGX,IAAI,CAACW,IAAI;YAAA,iCACf;cACLD,GAAG,EAAHA,GAAG;cACHC,IAAI,EAAJA,IAAI;cACJR,MAAM,EAANA,MAAM;cACNS,IAAI,EAAEL,MAAM,CAACM;YACf,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACF;EAAA,gBAfKd,UAAU;IAAA;EAAA;AAAA,GAef;AACD,eAAeA,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}