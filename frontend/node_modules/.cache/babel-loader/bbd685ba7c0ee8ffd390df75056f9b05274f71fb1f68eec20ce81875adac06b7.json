{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar START_MASKS = [255, 254, 252, 248, 240, 224, 192, 128];\nvar STOP_MASKS = [1, 3, 7, 15, 31, 63, 127, 255];\nmodule.exports = /*#__PURE__*/function () {\n  /**\n   * @param {Uint8Array} value\n   */\n  function ConsumableBuffer(value) {\n    _classCallCheck(this, ConsumableBuffer);\n    this._value = value;\n    this._currentBytePos = value.length - 1;\n    this._currentBitPos = 7;\n  }\n  _createClass(ConsumableBuffer, [{\n    key: \"availableBits\",\n    value: function availableBits() {\n      return this._currentBitPos + 1 + this._currentBytePos * 8;\n    }\n  }, {\n    key: \"totalBits\",\n    value: function totalBits() {\n      return this._value.length * 8;\n    }\n\n    /**\n     * @param {number} bits\n     */\n  }, {\n    key: \"take\",\n    value: function take(bits) {\n      var pendingBits = bits;\n      var result = 0;\n      while (pendingBits && this._haveBits()) {\n        var byte = this._value[this._currentBytePos];\n        var availableBits = this._currentBitPos + 1;\n        var taking = Math.min(availableBits, pendingBits);\n        var value = byteBitsToInt(byte, availableBits - taking, taking);\n        result = (result << taking) + value;\n        pendingBits -= taking;\n        this._currentBitPos -= taking;\n        if (this._currentBitPos < 0) {\n          this._currentBitPos = 7;\n          this._currentBytePos--;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * @param {number} bits\n     */\n  }, {\n    key: \"untake\",\n    value: function untake(bits) {\n      this._currentBitPos += bits;\n      while (this._currentBitPos > 7) {\n        this._currentBitPos -= 8;\n        this._currentBytePos += 1;\n      }\n    }\n  }, {\n    key: \"_haveBits\",\n    value: function _haveBits() {\n      return this._currentBytePos >= 0;\n    }\n  }]);\n  return ConsumableBuffer;\n}();\n\n/**\n * @param {number} byte\n * @param {number} start\n * @param {number} length\n */\nfunction byteBitsToInt(byte, start, length) {\n  var mask = maskFor(start, length);\n  return (byte & mask) >>> start;\n}\n\n/**\n * @param {number} start\n * @param {number} length\n */\nfunction maskFor(start, length) {\n  return START_MASKS[start] & STOP_MASKS[Math.min(length + start - 1, 7)];\n}","map":{"version":3,"names":["START_MASKS","STOP_MASKS","module","exports","value","_value","_currentBytePos","length","_currentBitPos","bits","pendingBits","result","_haveBits","byte","availableBits","taking","Math","min","byteBitsToInt","start","mask","maskFor"],"sources":["/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/hamt-sharding/src/consumable-buffer.js"],"sourcesContent":["'use strict'\n\nconst START_MASKS = [\n  0b11111111,\n  0b11111110,\n  0b11111100,\n  0b11111000,\n  0b11110000,\n  0b11100000,\n  0b11000000,\n  0b10000000\n]\n\nconst STOP_MASKS = [\n  0b00000001,\n  0b00000011,\n  0b00000111,\n  0b00001111,\n  0b00011111,\n  0b00111111,\n  0b01111111,\n  0b11111111\n]\n\nmodule.exports = class ConsumableBuffer {\n  /**\n   * @param {Uint8Array} value\n   */\n  constructor (value) {\n    this._value = value\n    this._currentBytePos = value.length - 1\n    this._currentBitPos = 7\n  }\n\n  availableBits () {\n    return this._currentBitPos + 1 + this._currentBytePos * 8\n  }\n\n  totalBits () {\n    return this._value.length * 8\n  }\n\n  /**\n   * @param {number} bits\n   */\n  take (bits) {\n    let pendingBits = bits\n    let result = 0\n    while (pendingBits && this._haveBits()) {\n      const byte = this._value[this._currentBytePos]\n      const availableBits = this._currentBitPos + 1\n      const taking = Math.min(availableBits, pendingBits)\n      const value = byteBitsToInt(byte, availableBits - taking, taking)\n      result = (result << taking) + value\n\n      pendingBits -= taking\n\n      this._currentBitPos -= taking\n      if (this._currentBitPos < 0) {\n        this._currentBitPos = 7\n        this._currentBytePos--\n      }\n    }\n\n    return result\n  }\n\n  /**\n   * @param {number} bits\n   */\n  untake (bits) {\n    this._currentBitPos += bits\n    while (this._currentBitPos > 7) {\n      this._currentBitPos -= 8\n      this._currentBytePos += 1\n    }\n  }\n\n  _haveBits () {\n    return this._currentBytePos >= 0\n  }\n}\n\n/**\n * @param {number} byte\n * @param {number} start\n * @param {number} length\n */\nfunction byteBitsToInt (byte, start, length) {\n  const mask = maskFor(start, length)\n  return (byte & mask) >>> start\n}\n\n/**\n * @param {number} start\n * @param {number} length\n */\nfunction maskFor (start, length) {\n  return START_MASKS[start] & STOP_MASKS[Math.min(length + start - 1, 7)]\n}\n"],"mappings":"AAAA,YAAY;;AAAA;AAAA;AAEZ,IAAMA,WAAW,GAAG,CAClB,GAAU,EACV,GAAU,EACV,GAAU,EACV,GAAU,EACV,GAAU,EACV,GAAU,EACV,GAAU,EACV,GAAU,CACX;AAED,IAAMC,UAAU,GAAG,CACjB,CAAU,EACV,CAAU,EACV,CAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,GAAU,EACV,GAAU,CACX;AAEDC,MAAM,CAACC,OAAO;EACZ;AACF;AACA;EACE,0BAAaC,KAAK,EAAE;IAAA;IAClB,IAAI,CAACC,MAAM,GAAGD,KAAK;IACnB,IAAI,CAACE,eAAe,GAAGF,KAAK,CAACG,MAAM,GAAG,CAAC;IACvC,IAAI,CAACC,cAAc,GAAG,CAAC;EACzB;EAAC;IAAA;IAAA,OAED,yBAAiB;MACf,OAAO,IAAI,CAACA,cAAc,GAAG,CAAC,GAAG,IAAI,CAACF,eAAe,GAAG,CAAC;IAC3D;EAAC;IAAA;IAAA,OAED,qBAAa;MACX,OAAO,IAAI,CAACD,MAAM,CAACE,MAAM,GAAG,CAAC;IAC/B;;IAEA;AACF;AACA;EAFE;IAAA;IAAA,OAGA,cAAME,IAAI,EAAE;MACV,IAAIC,WAAW,GAAGD,IAAI;MACtB,IAAIE,MAAM,GAAG,CAAC;MACd,OAAOD,WAAW,IAAI,IAAI,CAACE,SAAS,EAAE,EAAE;QACtC,IAAMC,IAAI,GAAG,IAAI,CAACR,MAAM,CAAC,IAAI,CAACC,eAAe,CAAC;QAC9C,IAAMQ,aAAa,GAAG,IAAI,CAACN,cAAc,GAAG,CAAC;QAC7C,IAAMO,MAAM,GAAGC,IAAI,CAACC,GAAG,CAACH,aAAa,EAAEJ,WAAW,CAAC;QACnD,IAAMN,KAAK,GAAGc,aAAa,CAACL,IAAI,EAAEC,aAAa,GAAGC,MAAM,EAAEA,MAAM,CAAC;QACjEJ,MAAM,GAAG,CAACA,MAAM,IAAII,MAAM,IAAIX,KAAK;QAEnCM,WAAW,IAAIK,MAAM;QAErB,IAAI,CAACP,cAAc,IAAIO,MAAM;QAC7B,IAAI,IAAI,CAACP,cAAc,GAAG,CAAC,EAAE;UAC3B,IAAI,CAACA,cAAc,GAAG,CAAC;UACvB,IAAI,CAACF,eAAe,EAAE;QACxB;MACF;MAEA,OAAOK,MAAM;IACf;;IAEA;AACF;AACA;EAFE;IAAA;IAAA,OAGA,gBAAQF,IAAI,EAAE;MACZ,IAAI,CAACD,cAAc,IAAIC,IAAI;MAC3B,OAAO,IAAI,CAACD,cAAc,GAAG,CAAC,EAAE;QAC9B,IAAI,CAACA,cAAc,IAAI,CAAC;QACxB,IAAI,CAACF,eAAe,IAAI,CAAC;MAC3B;IACF;EAAC;IAAA;IAAA,OAED,qBAAa;MACX,OAAO,IAAI,CAACA,eAAe,IAAI,CAAC;IAClC;EAAC;EAAA;AAAA,GACF;;AAED;AACA;AACA;AACA;AACA;AACA,SAASY,aAAa,CAAEL,IAAI,EAAEM,KAAK,EAAEZ,MAAM,EAAE;EAC3C,IAAMa,IAAI,GAAGC,OAAO,CAACF,KAAK,EAAEZ,MAAM,CAAC;EACnC,OAAO,CAACM,IAAI,GAAGO,IAAI,MAAMD,KAAK;AAChC;;AAEA;AACA;AACA;AACA;AACA,SAASE,OAAO,CAAEF,KAAK,EAAEZ,MAAM,EAAE;EAC/B,OAAOP,WAAW,CAACmB,KAAK,CAAC,GAAGlB,UAAU,CAACe,IAAI,CAACC,GAAG,CAACV,MAAM,GAAGY,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;AACzE"},"metadata":{},"sourceType":"script","externalDependencies":[]}