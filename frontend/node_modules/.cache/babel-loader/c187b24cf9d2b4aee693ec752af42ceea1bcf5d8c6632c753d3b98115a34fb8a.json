{"ast":null,"code":"import _regeneratorRuntime from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _asyncIterator from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport batch from 'it-batch';\nfunction balanced(source, reduce, options) {\n  return reduceToParents(source, reduce, options);\n}\nfunction reduceToParents(_x, _x2, _x3) {\n  return _reduceToParents.apply(this, arguments);\n}\nfunction _reduceToParents() {\n  _reduceToParents = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(source, reduce, options) {\n    var roots, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, chunked;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            roots = [];\n            _iteratorAbruptCompletion = false;\n            _didIteratorError = false;\n            _context.prev = 3;\n            _iterator = _asyncIterator(batch(source, options.maxChildrenPerNode));\n          case 5:\n            _context.next = 7;\n            return _iterator.next();\n          case 7:\n            if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n              _context.next = 17;\n              break;\n            }\n            chunked = _step.value;\n            _context.t0 = roots;\n            _context.next = 12;\n            return reduce(chunked);\n          case 12:\n            _context.t1 = _context.sent;\n            _context.t0.push.call(_context.t0, _context.t1);\n          case 14:\n            _iteratorAbruptCompletion = false;\n            _context.next = 5;\n            break;\n          case 17:\n            _context.next = 23;\n            break;\n          case 19:\n            _context.prev = 19;\n            _context.t2 = _context[\"catch\"](3);\n            _didIteratorError = true;\n            _iteratorError = _context.t2;\n          case 23:\n            _context.prev = 23;\n            _context.prev = 24;\n            if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n              _context.next = 28;\n              break;\n            }\n            _context.next = 28;\n            return _iterator.return();\n          case 28:\n            _context.prev = 28;\n            if (!_didIteratorError) {\n              _context.next = 31;\n              break;\n            }\n            throw _iteratorError;\n          case 31:\n            return _context.finish(28);\n          case 32:\n            return _context.finish(23);\n          case 33:\n            if (!(roots.length > 1)) {\n              _context.next = 35;\n              break;\n            }\n            return _context.abrupt(\"return\", reduceToParents(roots, reduce, options));\n          case 35:\n            return _context.abrupt(\"return\", roots[0]);\n          case 36:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 19, 23, 33], [24,, 28, 32]]);\n  }));\n  return _reduceToParents.apply(this, arguments);\n}\nexport default balanced;","map":{"version":3,"names":["batch","balanced","source","reduce","options","reduceToParents","roots","maxChildrenPerNode","chunked","push","length"],"sources":["/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/ipfs-unixfs-importer/esm/src/dag-builder/file/balanced.js"],"sourcesContent":["import batch from 'it-batch';\nfunction balanced(source, reduce, options) {\n  return reduceToParents(source, reduce, options);\n}\nasync function reduceToParents(source, reduce, options) {\n  const roots = [];\n  for await (const chunked of batch(source, options.maxChildrenPerNode)) {\n    roots.push(await reduce(chunked));\n  }\n  if (roots.length > 1) {\n    return reduceToParents(roots, reduce, options);\n  }\n  return roots[0];\n}\nexport default balanced;"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,UAAU;AAC5B,SAASC,QAAQ,CAACC,MAAM,EAAEC,MAAM,EAAEC,OAAO,EAAE;EACzC,OAAOC,eAAe,CAACH,MAAM,EAAEC,MAAM,EAAEC,OAAO,CAAC;AACjD;AAAC,SACcC,eAAe;EAAA;AAAA;AAAA;EAAA,8EAA9B,iBAA+BH,MAAM,EAAEC,MAAM,EAAEC,OAAO;IAAA;IAAA;MAAA;QAAA;UAAA;YAC9CE,KAAK,GAAG,EAAE;YAAA;YAAA;YAAA;YAAA,2BACYN,KAAK,CAACE,MAAM,EAAEE,OAAO,CAACG,kBAAkB,CAAC;UAAA;YAAA;YAAA;UAAA;YAAA;cAAA;cAAA;YAAA;YAApDC,OAAO;YAAA,cACtBF,KAAK;YAAA;YAAA,OAAYH,MAAM,CAACK,OAAO,CAAC;UAAA;YAAA;YAAA,YAA1BC,IAAI;UAAA;YAAA;YAAA;YAAA;UAAA;YAAA;YAAA;UAAA;YAAA;YAAA;YAAA;YAAA;UAAA;YAAA;YAAA;YAAA;cAAA;cAAA;YAAA;YAAA;YAAA;UAAA;YAAA;YAAA;cAAA;cAAA;YAAA;YAAA;UAAA;YAAA;UAAA;YAAA;UAAA;YAAA,MAERH,KAAK,CAACI,MAAM,GAAG,CAAC;cAAA;cAAA;YAAA;YAAA,iCACXL,eAAe,CAACC,KAAK,EAAEH,MAAM,EAAEC,OAAO,CAAC;UAAA;YAAA,iCAEzCE,KAAK,CAAC,CAAC,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAChB;EAAA;AAAA;AACD,eAAeL,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}