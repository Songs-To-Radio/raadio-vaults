{"ast":null,"code":"import { ethers } from \"ethers\";\nexport async function connectWallet() {\n  try {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n\n    // The MetaMask plugin also allows signing transactions to\n    // send ether and pay to change state within the blockchain.\n    // For this, you need the account signer...\n    const signer = provider.getSigner();\n    console.log(await signer.getAddress());\n    // return await signer.getAddress();\n  } catch (error) {\n    throw error;\n  }\n}","map":{"version":3,"names":["ethers","connectWallet","provider","providers","Web3Provider","window","ethereum","send","signer","getSigner","console","log","getAddress","error"],"sources":["/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/src/ethers.js"],"sourcesContent":["import { ethers } from \"ethers\";\n\nexport async function connectWallet(){\n    try {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        await provider.send(\"eth_requestAccounts\", []);\n\n// The MetaMask plugin also allows signing transactions to\n// send ether and pay to change state within the blockchain.\n// For this, you need the account signer...\nconst signer = provider.getSigner()\n        console.log(await signer.getAddress())\n        // return await signer.getAddress();\n    }catch (error) {\n        throw(error)\n    }\n}"],"mappings":"AAAA,SAASA,MAAM,QAAQ,QAAQ;AAE/B,OAAO,eAAeC,aAAa,GAAE;EACjC,IAAI;IACA,MAAMC,QAAQ,GAAG,IAAIF,MAAM,CAACG,SAAS,CAACC,YAAY,CAACC,MAAM,CAACC,QAAQ,CAAC;IACnE,MAAMJ,QAAQ,CAACK,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;;IAEtD;IACA;IACA;IACA,MAAMC,MAAM,GAAGN,QAAQ,CAACO,SAAS,EAAE;IAC3BC,OAAO,CAACC,GAAG,CAAC,MAAMH,MAAM,CAACI,UAAU,EAAE,CAAC;IACtC;EACJ,CAAC,QAAOC,KAAK,EAAE;IACX,MAAMA,KAAK;EACf;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}