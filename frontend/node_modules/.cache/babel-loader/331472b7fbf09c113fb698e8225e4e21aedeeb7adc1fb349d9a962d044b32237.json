{"ast":null,"code":"import _slicedToArray from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _regeneratorRuntime from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _wrapAsyncGenerator from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _awaitAsyncGenerator from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _asyncGeneratorDelegate from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js\";\nimport _asyncIterator from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport { BaseBlockstore } from './base.js';\nimport { base32 } from 'multiformats/bases/base32';\nimport * as raw from 'multiformats/codecs/raw';\nimport { CID } from 'multiformats/cid';\nimport * as Digest from 'multiformats/hashes/digest';\nimport * as Errors from './errors.js';\nexport var MemoryBlockstore = /*#__PURE__*/function (_BaseBlockstore) {\n  _inherits(MemoryBlockstore, _BaseBlockstore);\n  var _super = _createSuper(MemoryBlockstore);\n  function MemoryBlockstore() {\n    var _this3;\n    _classCallCheck(this, MemoryBlockstore);\n    _this3 = _super.call(this);\n    _this3.data = {};\n    return _this3;\n  }\n  _createClass(MemoryBlockstore, [{\n    key: \"open\",\n    value: function open() {\n      return Promise.resolve();\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      return Promise.resolve();\n    }\n  }, {\n    key: \"put\",\n    value: function () {\n      var _put = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(key, val) {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.data[base32.encode(key.multihash.bytes)] = val;\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function put(_x, _x2) {\n        return _put.apply(this, arguments);\n      }\n      return put;\n    }()\n  }, {\n    key: \"get\",\n    value: function () {\n      var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(key) {\n        var exists;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.has(key);\n              case 2:\n                exists = _context2.sent;\n                if (exists) {\n                  _context2.next = 5;\n                  break;\n                }\n                throw Errors.notFoundError();\n              case 5:\n                return _context2.abrupt(\"return\", this.data[base32.encode(key.multihash.bytes)]);\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function get(_x3) {\n        return _get.apply(this, arguments);\n      }\n      return get;\n    }()\n  }, {\n    key: \"has\",\n    value: function () {\n      var _has = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(key) {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", this.data[base32.encode(key.multihash.bytes)] !== undefined);\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n      function has(_x4) {\n        return _has.apply(this, arguments);\n      }\n      return has;\n    }()\n  }, {\n    key: \"delete\",\n    value: function () {\n      var _delete2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(key) {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                delete this.data[base32.encode(key.multihash.bytes)];\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n      function _delete(_x5) {\n        return _delete2.apply(this, arguments);\n      }\n      return _delete;\n    }()\n  }, {\n    key: \"_all\",\n    value: function _all() {\n      var _this = this;\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                return _context5.delegateYield(_asyncGeneratorDelegate(_asyncIterator(Object.entries(_this.data).map(function (_ref) {\n                  var _ref2 = _slicedToArray(_ref, 2),\n                    key = _ref2[0],\n                    value = _ref2[1];\n                  return {\n                    key: CID.createV1(raw.code, Digest.decode(base32.decode(key))),\n                    value: value\n                  };\n                })), _awaitAsyncGenerator), \"t0\", 1);\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    }\n  }, {\n    key: \"_allKeys\",\n    value: function _allKeys() {\n      var _this2 = this;\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                return _context6.delegateYield(_asyncGeneratorDelegate(_asyncIterator(Object.entries(_this2.data).map(function (_ref3) {\n                  var _ref4 = _slicedToArray(_ref3, 1),\n                    key = _ref4[0];\n                  return CID.createV1(raw.code, Digest.decode(base32.decode(key)));\n                })), _awaitAsyncGenerator), \"t0\", 1);\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }))();\n    }\n  }]);\n  return MemoryBlockstore;\n}(BaseBlockstore);","map":{"version":3,"names":["BaseBlockstore","base32","raw","CID","Digest","Errors","MemoryBlockstore","data","Promise","resolve","key","val","encode","multihash","bytes","has","exists","notFoundError","undefined","Object","entries","map","value","createV1","code","decode"],"sources":["/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/blockstore-core/esm/src/memory.js"],"sourcesContent":["import { BaseBlockstore } from './base.js';\nimport { base32 } from 'multiformats/bases/base32';\nimport * as raw from 'multiformats/codecs/raw';\nimport { CID } from 'multiformats/cid';\nimport * as Digest from 'multiformats/hashes/digest';\nimport * as Errors from './errors.js';\nexport class MemoryBlockstore extends BaseBlockstore {\n  constructor() {\n    super();\n    this.data = {};\n  }\n  open() {\n    return Promise.resolve();\n  }\n  close() {\n    return Promise.resolve();\n  }\n  async put(key, val) {\n    this.data[base32.encode(key.multihash.bytes)] = val;\n  }\n  async get(key) {\n    const exists = await this.has(key);\n    if (!exists)\n      throw Errors.notFoundError();\n    return this.data[base32.encode(key.multihash.bytes)];\n  }\n  async has(key) {\n    return this.data[base32.encode(key.multihash.bytes)] !== undefined;\n  }\n  async delete(key) {\n    delete this.data[base32.encode(key.multihash.bytes)];\n  }\n  async *_all() {\n    yield* Object.entries(this.data).map(([key, value]) => ({\n      key: CID.createV1(raw.code, Digest.decode(base32.decode(key))),\n      value\n    }));\n  }\n  async *_allKeys() {\n    yield* Object.entries(this.data).map(([key]) => CID.createV1(raw.code, Digest.decode(base32.decode(key))));\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}