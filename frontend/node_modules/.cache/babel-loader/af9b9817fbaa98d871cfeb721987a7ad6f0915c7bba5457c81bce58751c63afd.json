{"ast":null,"code":"import _regeneratorRuntime from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nfunction noop() {}\nexport function create() {\n  var chunkQueue = [];\n  var drainer = null;\n  var _drainerResolver = noop;\n  var ended = false;\n  var outWait = null;\n  var _outWaitResolver = noop;\n  var makeDrainer = function makeDrainer() {\n    if (!drainer) {\n      drainer = new Promise(function (resolve) {\n        _drainerResolver = function drainerResolver() {\n          drainer = null;\n          _drainerResolver = noop;\n          resolve();\n        };\n      });\n    }\n    return drainer;\n  };\n  var writer = {\n    write: function write(chunk) {\n      chunkQueue.push(chunk);\n      var drainer = makeDrainer();\n      _outWaitResolver();\n      return drainer;\n    },\n    end: function end() {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var drainer;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                ended = true;\n                drainer = makeDrainer();\n                _outWaitResolver();\n                return _context.abrupt(\"return\", drainer);\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  };\n  var iterator = {\n    next: function next() {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var chunk;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                chunk = chunkQueue.shift();\n                if (!chunk) {\n                  _context2.next = 4;\n                  break;\n                }\n                if (chunkQueue.length === 0) {\n                  _drainerResolver();\n                }\n                return _context2.abrupt(\"return\", {\n                  done: false,\n                  value: chunk\n                });\n              case 4:\n                if (!ended) {\n                  _context2.next = 7;\n                  break;\n                }\n                _drainerResolver();\n                return _context2.abrupt(\"return\", {\n                  done: true,\n                  value: undefined\n                });\n              case 7:\n                if (!outWait) {\n                  outWait = new Promise(function (resolve) {\n                    _outWaitResolver = function outWaitResolver() {\n                      outWait = null;\n                      _outWaitResolver = noop;\n                      return resolve(iterator.next());\n                    };\n                  });\n                }\n                return _context2.abrupt(\"return\", outWait);\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    }\n  };\n  return {\n    writer: writer,\n    iterator: iterator\n  };\n}","map":{"version":3,"names":["noop","create","chunkQueue","drainer","drainerResolver","ended","outWait","outWaitResolver","makeDrainer","Promise","resolve","writer","write","chunk","push","end","iterator","next","shift","length","done","value","undefined"],"sources":["/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@ipld/car/esm/lib/iterator-channel.js"],"sourcesContent":["function noop() {\n}\nexport function create() {\n  const chunkQueue = [];\n  let drainer = null;\n  let drainerResolver = noop;\n  let ended = false;\n  let outWait = null;\n  let outWaitResolver = noop;\n  const makeDrainer = () => {\n    if (!drainer) {\n      drainer = new Promise(resolve => {\n        drainerResolver = () => {\n          drainer = null;\n          drainerResolver = noop;\n          resolve();\n        };\n      });\n    }\n    return drainer;\n  };\n  const writer = {\n    write(chunk) {\n      chunkQueue.push(chunk);\n      const drainer = makeDrainer();\n      outWaitResolver();\n      return drainer;\n    },\n    async end() {\n      ended = true;\n      const drainer = makeDrainer();\n      outWaitResolver();\n      return drainer;\n    }\n  };\n  const iterator = {\n    async next() {\n      const chunk = chunkQueue.shift();\n      if (chunk) {\n        if (chunkQueue.length === 0) {\n          drainerResolver();\n        }\n        return {\n          done: false,\n          value: chunk\n        };\n      }\n      if (ended) {\n        drainerResolver();\n        return {\n          done: true,\n          value: undefined\n        };\n      }\n      if (!outWait) {\n        outWait = new Promise(resolve => {\n          outWaitResolver = () => {\n            outWait = null;\n            outWaitResolver = noop;\n            return resolve(iterator.next());\n          };\n        });\n      }\n      return outWait;\n    }\n  };\n  return {\n    writer,\n    iterator\n  };\n}"],"mappings":";;AAAA,SAASA,IAAI,GAAG,CAChB;AACA,OAAO,SAASC,MAAM,GAAG;EACvB,IAAMC,UAAU,GAAG,EAAE;EACrB,IAAIC,OAAO,GAAG,IAAI;EAClB,IAAIC,gBAAe,GAAGJ,IAAI;EAC1B,IAAIK,KAAK,GAAG,KAAK;EACjB,IAAIC,OAAO,GAAG,IAAI;EAClB,IAAIC,gBAAe,GAAGP,IAAI;EAC1B,IAAMQ,WAAW,GAAG,SAAdA,WAAW,GAAS;IACxB,IAAI,CAACL,OAAO,EAAE;MACZA,OAAO,GAAG,IAAIM,OAAO,CAAC,UAAAC,OAAO,EAAI;QAC/BN,gBAAe,GAAG,2BAAM;UACtBD,OAAO,GAAG,IAAI;UACdC,gBAAe,GAAGJ,IAAI;UACtBU,OAAO,EAAE;QACX,CAAC;MACH,CAAC,CAAC;IACJ;IACA,OAAOP,OAAO;EAChB,CAAC;EACD,IAAMQ,MAAM,GAAG;IACbC,KAAK,iBAACC,KAAK,EAAE;MACXX,UAAU,CAACY,IAAI,CAACD,KAAK,CAAC;MACtB,IAAMV,OAAO,GAAGK,WAAW,EAAE;MAC7BD,gBAAe,EAAE;MACjB,OAAOJ,OAAO;IAChB,CAAC;IACKY,GAAG,iBAAG;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACVV,KAAK,GAAG,IAAI;gBACNF,OAAO,GAAGK,WAAW,EAAE;gBAC7BD,gBAAe,EAAE;gBAAC,iCACXJ,OAAO;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAChB;EACF,CAAC;EACD,IAAMa,QAAQ,GAAG;IACTC,IAAI,kBAAG;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACLJ,KAAK,GAAGX,UAAU,CAACgB,KAAK,EAAE;gBAAA,KAC5BL,KAAK;kBAAA;kBAAA;gBAAA;gBACP,IAAIX,UAAU,CAACiB,MAAM,KAAK,CAAC,EAAE;kBAC3Bf,gBAAe,EAAE;gBACnB;gBAAC,kCACM;kBACLgB,IAAI,EAAE,KAAK;kBACXC,KAAK,EAAER;gBACT,CAAC;cAAA;gBAAA,KAECR,KAAK;kBAAA;kBAAA;gBAAA;gBACPD,gBAAe,EAAE;gBAAC,kCACX;kBACLgB,IAAI,EAAE,IAAI;kBACVC,KAAK,EAAEC;gBACT,CAAC;cAAA;gBAEH,IAAI,CAAChB,OAAO,EAAE;kBACZA,OAAO,GAAG,IAAIG,OAAO,CAAC,UAAAC,OAAO,EAAI;oBAC/BH,gBAAe,GAAG,2BAAM;sBACtBD,OAAO,GAAG,IAAI;sBACdC,gBAAe,GAAGP,IAAI;sBACtB,OAAOU,OAAO,CAACM,QAAQ,CAACC,IAAI,EAAE,CAAC;oBACjC,CAAC;kBACH,CAAC,CAAC;gBACJ;gBAAC,kCACMX,OAAO;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAChB;EACF,CAAC;EACD,OAAO;IACLK,MAAM,EAANA,MAAM;IACNK,QAAQ,EAARA;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}