{"ast":null,"code":"import _inherits from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _regeneratorRuntime from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _asyncToGenerator from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _asyncIterator from \"/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport batch from 'it-batch';\nfunction trickleStream(_x, _x2, _x3) {\n  return _trickleStream.apply(this, arguments);\n}\nfunction _trickleStream() {\n  _trickleStream = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(source, reduce, options) {\n    var root, iteration, maxDepth, subTree, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, layer;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            root = new Root(options.layerRepeat);\n            iteration = 0;\n            maxDepth = 1;\n            subTree = root;\n            _iteratorAbruptCompletion = false;\n            _didIteratorError = false;\n            _context2.prev = 6;\n            _iterator = _asyncIterator(batch(source, options.maxChildrenPerNode));\n          case 8:\n            _context2.next = 10;\n            return _iterator.next();\n          case 10:\n            if (!(_iteratorAbruptCompletion = !(_step = _context2.sent).done)) {\n              _context2.next = 26;\n              break;\n            }\n            layer = _step.value;\n            if (!subTree.isFull()) {\n              _context2.next = 22;\n              break;\n            }\n            if (!(subTree !== root)) {\n              _context2.next = 19;\n              break;\n            }\n            _context2.t0 = root;\n            _context2.next = 17;\n            return subTree.reduce(reduce);\n          case 17:\n            _context2.t1 = _context2.sent;\n            _context2.t0.addChild.call(_context2.t0, _context2.t1);\n          case 19:\n            if (iteration && iteration % options.layerRepeat === 0) {\n              maxDepth++;\n            }\n            subTree = new SubTree(maxDepth, options.layerRepeat, iteration);\n            iteration++;\n          case 22:\n            subTree.append(layer);\n          case 23:\n            _iteratorAbruptCompletion = false;\n            _context2.next = 8;\n            break;\n          case 26:\n            _context2.next = 32;\n            break;\n          case 28:\n            _context2.prev = 28;\n            _context2.t2 = _context2[\"catch\"](6);\n            _didIteratorError = true;\n            _iteratorError = _context2.t2;\n          case 32:\n            _context2.prev = 32;\n            _context2.prev = 33;\n            if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n              _context2.next = 37;\n              break;\n            }\n            _context2.next = 37;\n            return _iterator.return();\n          case 37:\n            _context2.prev = 37;\n            if (!_didIteratorError) {\n              _context2.next = 40;\n              break;\n            }\n            throw _iteratorError;\n          case 40:\n            return _context2.finish(37);\n          case 41:\n            return _context2.finish(32);\n          case 42:\n            if (!(subTree && subTree !== root)) {\n              _context2.next = 48;\n              break;\n            }\n            _context2.t3 = root;\n            _context2.next = 46;\n            return subTree.reduce(reduce);\n          case 46:\n            _context2.t4 = _context2.sent;\n            _context2.t3.addChild.call(_context2.t3, _context2.t4);\n          case 48:\n            return _context2.abrupt(\"return\", root.reduce(reduce));\n          case 49:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[6, 28, 32, 42], [33,, 37, 41]]);\n  }));\n  return _trickleStream.apply(this, arguments);\n}\nexport default trickleStream;\nvar SubTree = /*#__PURE__*/function () {\n  function SubTree(maxDepth, layerRepeat) {\n    var iteration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    _classCallCheck(this, SubTree);\n    this.maxDepth = maxDepth;\n    this.layerRepeat = layerRepeat;\n    this.currentDepth = 1;\n    this.iteration = iteration;\n    this.root = this.node = this.parent = {\n      children: [],\n      depth: this.currentDepth,\n      maxDepth: maxDepth,\n      maxChildren: (this.maxDepth - this.currentDepth) * this.layerRepeat\n    };\n  }\n  _createClass(SubTree, [{\n    key: \"isFull\",\n    value: function isFull() {\n      if (!this.root.data) {\n        return false;\n      }\n      if (this.currentDepth < this.maxDepth && this.node.maxChildren) {\n        this._addNextNodeToParent(this.node);\n        return false;\n      }\n      var distantRelative = this._findParent(this.node, this.currentDepth);\n      if (distantRelative) {\n        this._addNextNodeToParent(distantRelative);\n        return false;\n      }\n      return true;\n    }\n  }, {\n    key: \"_addNextNodeToParent\",\n    value: function _addNextNodeToParent(parent) {\n      this.parent = parent;\n      var nextNode = {\n        children: [],\n        depth: parent.depth + 1,\n        parent: parent,\n        maxDepth: this.maxDepth,\n        maxChildren: Math.floor(parent.children.length / this.layerRepeat) * this.layerRepeat\n      };\n      parent.children.push(nextNode);\n      this.currentDepth = nextNode.depth;\n      this.node = nextNode;\n    }\n  }, {\n    key: \"append\",\n    value: function append(layer) {\n      this.node.data = layer;\n    }\n  }, {\n    key: \"reduce\",\n    value: function reduce(_reduce) {\n      return this._reduce(this.root, _reduce);\n    }\n  }, {\n    key: \"_reduce\",\n    value: function () {\n      var _reduce2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(node, reduce) {\n        var _this = this;\n        var children;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                children = [];\n                if (!node.children.length) {\n                  _context.next = 5;\n                  break;\n                }\n                _context.next = 4;\n                return Promise.all(node.children.filter(function (child) {\n                  return child.data;\n                }).map(function (child) {\n                  return _this._reduce(child, reduce);\n                }));\n              case 4:\n                children = _context.sent;\n              case 5:\n                return _context.abrupt(\"return\", reduce((node.data || []).concat(children)));\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      function _reduce(_x4, _x5) {\n        return _reduce2.apply(this, arguments);\n      }\n      return _reduce;\n    }()\n  }, {\n    key: \"_findParent\",\n    value: function _findParent(node, depth) {\n      var parent = node.parent;\n      if (!parent || parent.depth === 0) {\n        return;\n      }\n      if (parent.children.length === parent.maxChildren || !parent.maxChildren) {\n        return this._findParent(parent, depth);\n      }\n      return parent;\n    }\n  }]);\n  return SubTree;\n}();\nvar Root = /*#__PURE__*/function (_SubTree) {\n  _inherits(Root, _SubTree);\n  var _super = _createSuper(Root);\n  function Root(layerRepeat) {\n    var _this2;\n    _classCallCheck(this, Root);\n    _this2 = _super.call(this, 0, layerRepeat);\n    _this2.root.depth = 0;\n    _this2.currentDepth = 1;\n    return _this2;\n  }\n  _createClass(Root, [{\n    key: \"addChild\",\n    value: function addChild(child) {\n      this.root.children.push(child);\n    }\n  }, {\n    key: \"reduce\",\n    value: function reduce(_reduce3) {\n      return _reduce3((this.root.data || []).concat(this.root.children));\n    }\n  }]);\n  return Root;\n}(SubTree);","map":{"version":3,"names":["batch","trickleStream","source","reduce","options","root","Root","layerRepeat","iteration","maxDepth","subTree","maxChildrenPerNode","layer","isFull","addChild","SubTree","append","currentDepth","node","parent","children","depth","maxChildren","data","_addNextNodeToParent","distantRelative","_findParent","nextNode","Math","floor","length","push","_reduce","Promise","all","filter","child","map","concat"],"sources":["/Users/macbook/Desktop/BlockChain Projects/Hackerthon/frontend/node_modules/ipfs-unixfs-importer/esm/src/dag-builder/file/trickle.js"],"sourcesContent":["import batch from 'it-batch';\nasync function trickleStream(source, reduce, options) {\n  const root = new Root(options.layerRepeat);\n  let iteration = 0;\n  let maxDepth = 1;\n  let subTree = root;\n  for await (const layer of batch(source, options.maxChildrenPerNode)) {\n    if (subTree.isFull()) {\n      if (subTree !== root) {\n        root.addChild(await subTree.reduce(reduce));\n      }\n      if (iteration && iteration % options.layerRepeat === 0) {\n        maxDepth++;\n      }\n      subTree = new SubTree(maxDepth, options.layerRepeat, iteration);\n      iteration++;\n    }\n    subTree.append(layer);\n  }\n  if (subTree && subTree !== root) {\n    root.addChild(await subTree.reduce(reduce));\n  }\n  return root.reduce(reduce);\n}\nexport default trickleStream;\nclass SubTree {\n  constructor(maxDepth, layerRepeat, iteration = 0) {\n    this.maxDepth = maxDepth;\n    this.layerRepeat = layerRepeat;\n    this.currentDepth = 1;\n    this.iteration = iteration;\n    this.root = this.node = this.parent = {\n      children: [],\n      depth: this.currentDepth,\n      maxDepth,\n      maxChildren: (this.maxDepth - this.currentDepth) * this.layerRepeat\n    };\n  }\n  isFull() {\n    if (!this.root.data) {\n      return false;\n    }\n    if (this.currentDepth < this.maxDepth && this.node.maxChildren) {\n      this._addNextNodeToParent(this.node);\n      return false;\n    }\n    const distantRelative = this._findParent(this.node, this.currentDepth);\n    if (distantRelative) {\n      this._addNextNodeToParent(distantRelative);\n      return false;\n    }\n    return true;\n  }\n  _addNextNodeToParent(parent) {\n    this.parent = parent;\n    const nextNode = {\n      children: [],\n      depth: parent.depth + 1,\n      parent,\n      maxDepth: this.maxDepth,\n      maxChildren: Math.floor(parent.children.length / this.layerRepeat) * this.layerRepeat\n    };\n    parent.children.push(nextNode);\n    this.currentDepth = nextNode.depth;\n    this.node = nextNode;\n  }\n  append(layer) {\n    this.node.data = layer;\n  }\n  reduce(reduce) {\n    return this._reduce(this.root, reduce);\n  }\n  async _reduce(node, reduce) {\n    let children = [];\n    if (node.children.length) {\n      children = await Promise.all(node.children.filter(child => child.data).map(child => this._reduce(child, reduce)));\n    }\n    return reduce((node.data || []).concat(children));\n  }\n  _findParent(node, depth) {\n    const parent = node.parent;\n    if (!parent || parent.depth === 0) {\n      return;\n    }\n    if (parent.children.length === parent.maxChildren || !parent.maxChildren) {\n      return this._findParent(parent, depth);\n    }\n    return parent;\n  }\n}\nclass Root extends SubTree {\n  constructor(layerRepeat) {\n    super(0, layerRepeat);\n    this.root.depth = 0;\n    this.currentDepth = 1;\n  }\n  addChild(child) {\n    this.root.children.push(child);\n  }\n  reduce(reduce) {\n    return reduce((this.root.data || []).concat(this.root.children));\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}